import * as dotenv from "dotenv";
import { ethers, Wallet } from "ethers";
import Safe, { SafeFactory } from "@safe-global/protocol-kit";
import { EthersAdapter } from "@safe-global/protocol-kit";
import SafeApiKit from "@safe-global/api-kit";
import {CreateCallAbi, tokenServiceImplementationABI} from "../ABI/ABI.js";

dotenv.config();

const SAFE_ADDRESS = process.env.SAFE_ADDRESS;
const provider = new ethers.providers.JsonRpcProvider(
    "https://eth-goerli.g.alchemy.com/v2/fLCeKO4GA9Gc3js8MUt9Djy7WHCFxATq"
);
const deployerSigner = new ethers.Wallet(process.env.secret_key1, provider);
const bytecode  = "0x608060405260405162000d1f38038062000d1f83398181016040528101906200002991906200056e565b81816200003f828260006200004960201b60201c565b50505050620007eb565b6200005a836200008c60201b60201c565b600082511180620000685750805b156200008757620000858383620000e360201b620000371760201c565b505b505050565b6200009d816200011960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606062000111838360405180606001604052806027815260200162000cf860279139620001ef60201b60201c565b905092915050565b6200012f81620002d360201b620000641760201c565b62000171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000168906200065b565b60405180910390fd5b80620001ab7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620002f660201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606200020284620002d360201b60201c565b62000244576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023b90620006f3565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516200026e919062000762565b600060405180830381855af49150503d8060008114620002ab576040519150601f19603f3d011682016040523d82523d6000602084013e620002b0565b606091505b5091509150620002c88282866200030060201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b60608315620003125782905062000365565b600083511115620003265782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035c9190620007c7565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ad8262000380565b9050919050565b620003bf81620003a0565b8114620003cb57600080fd5b50565b600081519050620003df81620003b4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200043a82620003ef565b810181811067ffffffffffffffff821117156200045c576200045b62000400565b5b80604052505050565b6000620004716200036c565b90506200047f82826200042f565b919050565b600067ffffffffffffffff821115620004a257620004a162000400565b5b620004ad82620003ef565b9050602081019050919050565b60005b83811015620004da578082015181840152602081019050620004bd565b83811115620004ea576000848401525b50505050565b600062000507620005018462000484565b62000465565b905082815260208101848484011115620005265762000525620003ea565b5b62000533848285620004ba565b509392505050565b600082601f830112620005535762000552620003e5565b5b815162000565848260208601620004f0565b91505092915050565b6000806040838503121562000588576200058762000376565b5b60006200059885828601620003ce565b925050602083015167ffffffffffffffff811115620005bc57620005bb6200037b565b5b620005ca858286016200053b565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600062000643602d83620005d4565b91506200065082620005e5565b604082019050919050565b60006020820190508181036000830152620006768162000634565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000620006db602683620005d4565b9150620006e8826200067d565b604082019050919050565b600060208201905081810360008301526200070e81620006cc565b9050919050565b600081519050919050565b600081905092915050565b6000620007388262000715565b62000744818562000720565b935062000756818560208601620004ba565b80840191505092915050565b60006200077082846200072b565b915081905092915050565b600081519050919050565b600062000793826200077b565b6200079f8185620005d4565b9350620007b1818560208601620004ba565b620007bc81620003ef565b840191505092915050565b60006020820190508181036000830152620007e3818462000786565b905092915050565b6104fd80620007fb6000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b6100356100306100cb565b6100da565b565b606061005c83836040518060600160405280602781526020016104a160279139610100565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b7fdde71ec107d36cacc35f19230110eaa83cd22c0640f1ded308eeb1d9b037c6c1600d6040516100c191906102da565b60405180910390a1565b60006100d56101cd565b905090565b3660008037600080366000845af43d6000803e80600081146100fb573d6000f35b3d6000fd5b606061010b84610064565b61014a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014190610378565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516101729190610412565b600060405180830381855af49150503d80600081146101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b50915091506101c2828286610224565b925050509392505050565b60006101fb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561023457829050610284565b6000835111156102475782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b919061047e565b60405180910390fd5b9392505050565b6000819050919050565b6000819050919050565b6000819050919050565b60006102c46102bf6102ba8461028b565b61029f565b610295565b9050919050565b6102d4816102a9565b82525050565b60006020820190506102ef60008301846102cb565b92915050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006103626026836102f5565b915061036d82610306565b604082019050919050565b6000602082019050818103600083015261039181610355565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156103cc5780820151818401526020810190506103b1565b838111156103db576000848401525b50505050565b60006103ec82610398565b6103f681856103a3565b93506104068185602086016103ae565b80840191505092915050565b600061041e82846103e1565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061045082610429565b61045a81856102f5565b935061046a8185602086016103ae565b61047381610434565b840191505092915050565b600060208201905081810360008301526104988184610445565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122096efb3186e4ce80cc909f8301b8b890d0abc2a90dabf1c1daf44a05d7070d1e764736f6c63430008090033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

const chainId = 54; 
const bridgeAddress = "0x04409aD144FD1034462e86f1F2b537BdE584bb60";
const usdcAddress = "0x13ab54435913454568ee88021E39e8F029159f46"; 
const usdtAddress = "0x694791a385243e222C94Fd4dd37568895Fcb7096";
const ownerAddress = "0xA945a14FEdd138B52178C1B6dD83AC6c24474718";

const tokenserviceimplementationAddress = process.env.tokenserviceimplementationAddress;
const initializeData = new ethers.utils.Interface(tokenServiceImplementationABI).encodeFunctionData("initialize", [bridgeAddress, chainId, usdcAddress, usdtAddress, ownerAddress]);
const _data  = new ethers.utils.AbiCoder().encode(["address", "bytes"], [tokenserviceimplementationAddress, initializeData]);

// Encode deployment
const deployerInterface = new ethers.utils.Interface(CreateCallAbi);
const deployCallData = deployerInterface.encodeFunctionData("performCreate", [
    0,
    bytecode + _data.slice(2)
]);

const ethAdapter = new EthersAdapter({
    ethers,
    signerOrProvider: deployerSigner,
});
const safeService = new SafeApiKit.default({
    txServiceUrl: "https://safe-transaction-goerli.safe.global",
    ethAdapter,
});

const txData = {
    to: process.env.CREATECALL_CONTRACT_ADDRESS,
    value: "0",
    data: deployCallData,
};
const safeSdk = await Safe.default.create({
    ethAdapter: ethAdapter,
    safeAddress: SAFE_ADDRESS,
});
const safeTx = await safeSdk.createTransaction({
    safeTransactionData: txData,
});
const safeTxHash = await safeSdk.getTransactionHash(safeTx);

const signature = await safeSdk.signTypedData(safeTx);
// console.log("txn hash", safeTxHash);

const transactionConfig = {
    safeAddress: SAFE_ADDRESS,
    safeTransactionData: safeTx.data,
    safeTxHash: safeTxHash,
    senderAddress: process.env.SENDER_ADDRESS,
    senderSignature: signature.data,
};

await safeService.proposeTransaction(transactionConfig);
